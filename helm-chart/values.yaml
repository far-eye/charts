# Default values for helm-chart.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: repository-name
  pullPolicy: IfNotPresent
  tag: version-name

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount: {}
  # Specifies whether a service account should be created
  # create: true
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  # name: fullname

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
   type: ClusterIP
   port: 8080
   targetPort: test

ingress:
  enabled: false
  annotations: {}
      # cert-manager.io/cluster-issuer: letsencrypt-prod
      # kubernetes.io/ingress.class: nginx-office
      # kubernetes.io/tls-acme: 'true'
  hosts: []
    # - host: "chart-example.local"
    #   paths:
    #   - path: /	
    #     backend:	
    #       servicePort: 8080 
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

ports: []
  # - name: test-port
  #   port: 8080
  #   protocol: TCP
livenessProbe: {}
    # delay: 30
    # path: /healthz
    # port: test-port
readinessProbe: {}
  # delay: 30
  # path: /healthz
  # port: test-port

nodeSelector: {}

tolerations: []

affinity: {}


rbac: {}
#  rules:
#    # to check nodes for node readiness label
#    - apiGroups: [""]
#      resources: ["nodes"]
#      verbs: ["get","list"]
#  #Get RoleBinding Settings
#  roleBinding:
#      subjects:
#        - kind: ServiceAccount
#          name: service-account-name
#          namespace: namespace

hpa: {}
#  minReplicas: 1
#  maxReplicas: 10
#  targetCpu: 50

jobs: []
#  - name: job
#    restartPolicy: Never
#    containers :
#     - command : ["command1","command2"]
#       args : ["args1"]
#       image: test #if not defined then it will pick value from image

cronJobs: []
#  - name: cron
#    restartPolicy: Never
#    schedule: "* * * * *"
#    containers :
#        - args : []
#          command : ["command1","command2"]
#          image: cron #if not defined then it will pick value from image

config: {}
  # ENV_VARIABLE: "env-variable"

